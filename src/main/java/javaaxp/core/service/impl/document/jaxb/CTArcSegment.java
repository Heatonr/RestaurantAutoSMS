//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.23 at 11:22:55 PM EDT 
//


package javaaxp.core.service.impl.document.jaxb;

import javaaxp.core.service.model.document.page.IArcSegment;
import javaaxp.core.service.model.document.page.STSweepDirection;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CT_ArcSegment complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CT_ArcSegment">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attGroup ref="{http://schemas.microsoft.com/xps/2005/06}AG_ArcSegment"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CT_ArcSegment")
public class CTArcSegment implements IArcSegment  {

    @XmlAttribute(name = "IsLargeArc", required = true)
    protected boolean isLargeArc;
    @XmlAttribute(name = "IsStroked")
    protected Boolean isStroked;
    @XmlAttribute(name = "Point", required = true)
    protected String point;
    @XmlAttribute(name = "RotationAngle", required = true)
    protected double rotationAngle;
    @XmlAttribute(name = "Size", required = true)
    protected String size;
    @XmlAttribute(name = "SweepDirection", required = true)
    protected STSweepDirection sweepDirection;

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#isIsLargeArc()
	 */
    public boolean isIsLargeArc() {
        return isLargeArc;
    }

    /**
     * Sets the value of the isLargeArc property.
     * 
     */
    public void setIsLargeArc(boolean value) {
        this.isLargeArc = value;
    }

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#isIsStroked()
	 */
    public boolean isIsStroked() {
        if (isStroked == null) {
            return true;
        } else {
            return isStroked;
        }
    }

    /**
     * Sets the value of the isStroked property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsStroked(Boolean value) {
        this.isStroked = value;
    }

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#getPoint()
	 */
    public String getPoint() {
        return point;
    }

    /**
     * Sets the value of the point property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPoint(String value) {
        this.point = value;
    }

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#getRotationAngle()
	 */
    public double getRotationAngle() {
        return rotationAngle;
    }

    /**
     * Sets the value of the rotationAngle property.
     * 
     */
    public void setRotationAngle(double value) {
        this.rotationAngle = value;
    }

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#getSize()
	 */
    public String getSize() {
        return size;
    }

    /**
     * Sets the value of the size property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSize(String value) {
        this.size = value;
    }

    /* (non-Javadoc)
	 * @see xps.document.jaxb.IArcSegment#getSweepDirection()
	 */
    public STSweepDirection getSweepDirection() {
        return sweepDirection;
    }

    /**
     * Sets the value of the sweepDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link STSweepDirection }
     *     
     */
    public void setSweepDirection(STSweepDirection value) {
        this.sweepDirection = value;
    }

}
